FROM ubuntu:17.04 as builder

MAINTAINER Theodore Kisner <tskisner@lbl.gov>

# Use bash

SHELL ["/bin/bash", "--login", "-c"]

# Install system dependencies.

RUN apt-get update \
    && apt-get install -y curl procps build-essential gfortran git subversion \
    autoconf automake libtool m4 cmake locales \
    libgl1-mesa-glx xvfb \
    && rm -fr /var/lib/apt/lists/*

# Set up locales, to workaround a pip bug

RUN locale-gen en_US.UTF-8
ENV LANG en_US.UTF-8 
ENV LANGUAGE en_US:en 
ENV LC_ALL en_US.UTF-8

# Install Intel tools to /opt/intel.  We assume that the build context already
# contains a copy of the Intel tools, and we just copy it into the image.

RUN mkdir -p /opt/intel

COPY intel /opt/intel/

RUN echo ". /opt/intel/compilers_and_libraries_2018/linux/bin/compilervars.sh intel64" >> /etc/profile
RUN echo ". /opt/intel/compilers_and_libraries_2018/linux/mkl/bin/mklvars.sh intel64" >> /etc/profile

RUN cp -a /opt/intel/compilers_and_libraries/linux/lib/intel64/* /usr/lib/

RUN cp -a /opt/intel/mkl/lib/intel64/* /usr/lib/

# We install everything directly into /usr so that we do
# not need to modify the default library and executable
# search paths.  Shifter will manipulate LD_LIBRARY_PATH,
# so it is important not to use that variable.

# Working directory for builds

WORKDIR /usr/src

# Install conda root environment

ENV PYTHONPATH ""
ENV PYTHONSTARTUP ""
ENV PYTHONNOUSERSITE "1"
ENV PYTHONUSERBASE "/tmp"

@conda_root@

# Install conda packages.

@conda_pkgs@

# Install pip packages.

@pip_pkgs@

# Copy all patch files to current working directory

RUN mkdir ./rules
ADD rules/patch_* ./rules/

RUN mkdir -p /usr/lib/python3.5/site-packages
ENV PYTHONPATH /usr/lib/python3.5/site-packages

# Install MPICH 3.2 which is compatible with the external
# Cray MPICH which is prepended to LD_LIBRARY_PATH as part
# of shifter.

@mpich@

# Install mpi4py.

@mpi4py@

# Install CFITSIO.

@cfitsio@

# Install wcslib

@wcslib@

# Install FFTW.

@fftw@

# Install Healpix

@healpix@

# Install Boost

@boost@

# Install libmadam

@madam@

# Install conviqt

@conviqt@

# Install elemental

@elemental@

# Install HDF5

@hdf5@

# Install h5py

@h5py@

# Install TIDAS

@tidas@

# Install aatm

@aatm@

# Install TOAST

@toast@

# Remove the temporary patches

RUN rm -rf ./rules

# Precompile all python modules

RUN python -m compileall -f "/usr/lib/python@PYVERSION@/site-packages"

# Create a fake home directory so that packages can create
# config files if needed

RUN mkdir /home/toast
RUN mkdir /home/toast/.astropy

WORKDIR /home/toast
ENV HOME /home/toast

RUN python -c "import astropy"
RUN python -c "import matplotlib.font_manager as fm; f = fm.FontManager"

#---------------------------------------------------------------
# Now we create the runtime image (second stage of the build).
#---------------------------------------------------------------

FROM ubuntu:17.04

# Copy our installed software binaries and libraries

COPY --from=builder /usr/bin /usr/bin/
COPY --from=builder /usr/lib /usr/lib/

ENV PYTHONPATH /usr/lib/python3.6/site-packages

# Copy our conda install

COPY --from=builder /usr/local /usr/local/

# Copy our fake home directory

COPY --from=builder /home/toast /home/toast/

# Set the entrypoint and default command

WORKDIR /home/toast
ENV HOME /home/toast

ENTRYPOINT ["/bin/bash", "-c"]
CMD ["/bin/bash"]

