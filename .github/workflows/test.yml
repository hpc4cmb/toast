# Use pre-built docker containers to run our unit tests on different python versions.
#
# In general, we try to run on:
# - The oldest supported python
# - The latest stable python that is the common default on most systems and conda
# - (During transitions) The newly released bleeding edge python

name:  Run Test Suite

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master
      #- toast3

jobs:
  test:
    name: Tests on ${{ matrix.arch }} with Conda Python-${{ matrix.python }}
    runs-on: ${{ matrix.os }}
    defaults:
      run:
        shell: bash -l {0}
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: ubuntu-latest
            python: "3.8"
            arch: Linux-x86_64
            ompdisable: 0
          - os: ubuntu-latest
            python: "3.10"
            arch: Linux-x86_64
            ompdisable: 0
          - os: ubuntu-latest
            python: "3.11"
            arch: Linux-x86_64
            ompdisable: 0
          - os: macos-latest
            python: "3.9"
            arch: MacOSX-x86_64
            ompdisable: 1
          - os: macos-latest
            python: "3.10"
            arch: MacOSX-x86_64
            ompdisable: 1
          - os: macos-latest
            python: "3.11"
            arch: MacOSX-x86_64
            ompdisable: 1
    steps:
      - name: Cancel Previous Runs
        uses: styfle/cancel-workflow-action@0.11.0
        with:
          access_token: ${{ github.token }}

      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Conda Base
        uses: conda-incubator/setup-miniconda@v2
        with:
          miniconda-version: "latest"
          channels: conda-forge
          use-only-tar-bz2: true  # IMPORTANT: Needs for caching to work properly!
          auto-update-conda: true
          auto-activate-base: true

      - name: Check Conda Config
        run: |
          conda info
          conda list
          conda config --show-sources
          conda config --show

      - name: Create Conda Env
        run: |
          ./platforms/conda_dev_setup.sh toast yes ${{ matrix.python }}

      - name: Install
        run: |
          conda activate toast
          export TOAST_BUILD_DISABLE_OPENMP=${{ matrix.ompdisable }}
          ./platforms/conda.sh

      - name: Run Serial Tests
        run: |
          conda activate toast
          export OMP_NUM_THREADS=2
          export MPI_DISABLE=1
          python3 -c 'import toast.tests; toast.tests.run()'
          unset MPI_DISABLE
          unset OMP_NUM_THREADS

      - name: Run MPI Tests
        run: |
          conda activate toast
          export OMP_NUM_THREADS=1
          mpirun -np 2 python -c 'import toast.tests; toast.tests.run()'
          unset OMP_NUM_THREADS

