
name:  Test Binary Wheels

# Uncomment here for testing and comment out schedule below.
# on:
#   push:
#     branches:
#       - master
#       - toast3
#   pull_request:
#     branches:
#       - master
#       - toast3

# Uncomment here for production and comment out push / PR above.
on:
  schedule:
    - cron: '0 4 * * *'

jobs:
  build_wheels:
    name: Build wheel for cp${{ matrix.python }}-${{ matrix.platform_id }}-${{ matrix.manylinux_image }}
    runs-on: ${{ matrix.os }}
    strategy:
      # Ensure that a wheel builder finishes even if another fails.  Useful for
      # debugging multiple problems in parallel.
      fail-fast: false
      matrix:
        include:
          # Linux 64 bit manylinux2014
          - os: ubuntu-latest
            python: 37
            platform_id: manylinux_x86_64
            manylinux_image: manylinux2014
          - os: ubuntu-latest
            python: 38
            platform_id: manylinux_x86_64
            manylinux_image: manylinux2014
          - os: ubuntu-latest
            python: 39
            platform_id: manylinux_x86_64
            manylinux_image: manylinux2014
          - os: ubuntu-latest
            python: 310
            platform_id: manylinux_x86_64
            manylinux_image: manylinux2014

          # MacOS x86_64
          - os: macos-latest
            python: 37
            platform_id: macosx_x86_64
          - os: macos-latest
            python: 38
            platform_id: macosx_x86_64
          - os: macos-latest
            bitness: 64
            python: 39
            platform_id: macosx_x86_64
          - os: macos-latest
            python: 310
            platform_id: macosx_x86_64

          # MacOS arm64 - Re-enable after github CI supports M1 runners:
          #   https://github.com/actions/virtual-environments/issues/2187
          #
          # - os: macos-latest
          #   python: 39
          #   platform_id: macosx_arm64
          # - os: macos-latest
          #   python: 310
          #   platform_id: macosx_arm64
    env:
      CIBW_BUILD: cp${{ matrix.python }}-${{ matrix.platform_id }}
      CIBW_ARCHS_MACOS: "x86_64 arm64"
      CIBW_MANYLINUX_X86_64_IMAGE: ${{ matrix.manylinux_image }}
      CIBW_MANYLINUX_I686_IMAGE: ${{ matrix.manylinux_image }}
      CIBW_BUILD_VERBOSITY: 3
      CIBW_ENVIRONMENT_LINUX: "TOAST_BUILD_BLAS_LIBRARIES='-lopenblas -fopenmp -lm -lgfortran' TOAST_BUILD_LAPACK_LIBRARIES='-lopenblas -fopenmp -lm -lgfortran' TOAST_BUILD_CMAKE_VERBOSE_MAKEFILE=ON TOAST_BUILD_TOAST_STATIC_DEPS=ON"
      CIBW_ENVIRONMENT_MACOS: "TOAST_BUILD_CMAKE_C_COMPILER=clang TOAST_BUILD_CMAKE_CXX_COMPILER=clang++ TOAST_BUILD_CMAKE_C_FLAGS='-O3 -g -fPIC' TOAST_BUILD_CMAKE_CXX_FLAGS='-O3 -g -fPIC -std=c++11 -stdlib=libc++' TOAST_BUILD_DISABLE_OPENMP=1 TOAST_BUILD_BLA_VENDOR='Apple' TOAST_BUILD_CMAKE_VERBOSE_MAKEFILE=ON TOAST_BUILD_TOAST_STATIC_DEPS=ON"
      CIBW_BEFORE_BUILD_LINUX: ./wheels/install_deps_linux.sh
      CIBW_BEFORE_BUILD_MACOS: ./wheels/install_deps_osx.sh ${{ matrix.platform_id }}
      CIBW_BEFORE_TEST: export OMP_NUM_THREADS=2
      CIBW_TEST_COMMAND: . {project}/wheels/cibw_run_tests.sh
      CIBW_TEST_SKIP: "*-macosx_arm64 *-macosx_universal2:arm64"
    steps:
      - name: Cancel Previous Runs
        uses: styfle/cancel-workflow-action@0.9.1
        with:
          access_token: ${{ github.token }}

      - name: Checkout
        uses: actions/checkout@v2

      - uses: actions/setup-python@v2
        name: Install Python
        with:
          python-version: '3.9'

      - name: Install cibuildwheel
        run: |
          python -m pip install cibuildwheel==2.5.0

      - name: Build wheel
        run: |
          python -m cibuildwheel --output-dir wheelhouse

      - uses: actions/upload-artifact@v2
        with:
          name: wheels
          path: ./wheelhouse/toast*.whl
