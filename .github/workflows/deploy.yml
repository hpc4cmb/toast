# Deploy tagged releases.

name:  Deploy Release

on:
  push:
    tags:
      - '*'

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  TWINE_USERNAME: __token__
  TWINE_PASSWORD: ${{ secrets.TWINE_TOKEN }}

jobs:
  build_wheels:
    name: Build wheel for cp${{ matrix.python }}-${{ matrix.builder }}_${{ matrix.arch }}
    runs-on: ${{ matrix.os }}
    strategy:
      # Ensure that a wheel builder finishes even if another fails.  Useful for
      # debugging multiple problems in parallel.
      fail-fast: false
      matrix:
        include:
          # Linux 64 bit manylinux
          - os: ubuntu-latest
            arch: x86_64
            python: 39
            builder: manylinux
          - os: ubuntu-latest
            arch: x86_64
            python: 310
            builder: manylinux
          - os: ubuntu-latest
            arch: x86_64
            python: 311
            builder: manylinux
          - os: ubuntu-latest
            arch: x86_64
            python: 312
            builder: manylinux

          # MacOS x86_64.  The macos-13 runner is the last
          # Intel-based runner version.  At some point we'll
          # need to switch to macos-latest and test cross compiling.
          - os: macos-13
            arch: x86_64
            python: 310
            builder: macosx
            deploy: 13.0
          - os: macos-13
            arch: x86_64
            python: 311
            builder: macosx
            deploy: 13.0
          - os: macos-13
            arch: x86_64
            python: 312
            builder: macosx
            deploy: 13.0

          # MacOS arm64
          - os: macos-latest
            arch: arm64
            python: 310
            builder: macosx
            deploy: 14.0
          - os: macos-latest
            arch: arm64
            python: 311
            builder: macosx
            deploy: 14.0
          - os: macos-latest
            arch: arm64
            python: 312
            builder: macosx
            deploy: 14.0
    env:
      CIBW_BUILD: cp${{ matrix.python }}-${{ matrix.builder }}_${{ matrix.arch }}
      CIBW_MANYLINUX_X86_64_IMAGE: ${{ matrix.builder }}2014
      CIBW_MANYLINUX_I686_IMAGE: ${{ matrix.builder }}2014
      CIBW_BUILD_VERBOSITY: 3
      CIBW_ENVIRONMENT_LINUX: >
        TOAST_BUILD_CMAKE_VERBOSE_MAKEFILE=ON
        TOAST_BUILD_TOAST_STATIC_DEPS=ON
        TOAST_BUILD_BLAS_LIBRARIES='-L/usr/local/lib -lopenblas -fopenmp -lm -lgfortran'
        TOAST_BUILD_LAPACK_LIBRARIES='-L/usr/local/lib -lopenblas -fopenmp -lm -lgfortran'
        TOAST_BUILD_FFTW_ROOT=/usr/local
        TOAST_BUILD_AATM_ROOT=/usr/local
        TOAST_BUILD_SUITESPARSE_INCLUDE_DIR_HINTS=/usr/local/include
        TOAST_BUILD_SUITESPARSE_LIBRARY_DIR_HINTS=/usr/local/lib
      CIBW_ENVIRONMENT_MACOS: >
        MACOSX_DEPLOYMENT_TARGET=${{ matrix.deploy }}
        TOAST_BUILD_CMAKE_C_COMPILER=clang
        TOAST_BUILD_CMAKE_CXX_COMPILER=clang++
        TOAST_BUILD_CMAKE_C_FLAGS='-O3 -fPIC'
        TOAST_BUILD_CMAKE_CXX_FLAGS='-O3 -fPIC -std=c++11 -stdlib=libc++'
        TOAST_BUILD_CMAKE_VERBOSE_MAKEFILE=ON
        TOAST_BUILD_DISABLE_OPENMP=1
        TOAST_BUILD_BLAS_LIBRARIES='/usr/local/lib/libopenblas.dylib'
        TOAST_BUILD_LAPACK_LIBRARIES='/usr/local/lib/libopenblas.dylib'
        TOAST_BUILD_FFTW_ROOT=/usr/local
        TOAST_BUILD_AATM_ROOT=/usr/local
        TOAST_BUILD_SUITESPARSE_INCLUDE_DIR_HINTS=/usr/local/include
        TOAST_BUILD_SUITESPARSE_LIBRARY_DIR_HINTS=/usr/local/lib
      CIBW_BEFORE_BUILD_LINUX: ./packaging/wheels/install_deps_linux.sh
      CIBW_BEFORE_BUILD_MACOS: ./packaging/wheels/install_deps_osx.sh
      CIBW_BEFORE_TEST: export OMP_NUM_THREADS=1
      CIBW_TEST_COMMAND: source {project}/packaging/wheels/cibw_run_tests.sh
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        name: Install Python
        with:
          python-version: '3.10'

      - name: Install cibuildwheel
        run: |
          python -m pip install twine cibuildwheel==2.20.0

      - name: Build wheel
        run: |
          python -m cibuildwheel --output-dir wheelhouse

      - name: Upload to PyPI
        run: |
          python -m twine upload wheelhouse/toast*cp${{ matrix.python }}-${{ matrix.builder }}*${{ matrix.arch }}*.whl
